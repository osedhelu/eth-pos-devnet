version: "3.8"

# Red privada Ethereum con dos nodos y explorador de bloques
services:
  # Nodo 1 - Nodo principal y minero
  ethereum-node1:
    image: ethereum/client-go:latest
    container_name: geth-node1
    ports:
      - "${NODE1_HTTP_PORT}:8545"  # Puerto RPC
      - "${NODE1_WS_PORT}:8546"    # Puerto WebSocket
      - "${NODE1_P2P_PORT}:30303"  # Puerto P2P
    volumes:
      - ./node1:/root/.ethereum
      - ./genesis.json:/root/genesis.json
    environment:
      - NETWORK_NAME=${NETWORK_NAME}
      - CHAIN_NAME=${CHAIN_NAME}
      - NODE_PASS=${NODE_PASS}
    command:
      - --datadir=/root/.ethereum
      - --networkid=${NETWORK_ID}
      - --http
      - --http.addr=0.0.0.0
      - --http.port=8545
      - --http.corsdomain=*
      - --http.api=eth,net,web3,personal,miner,admin,debug,txpool
      - --ws
      - --ws.addr=0.0.0.0
      - --ws.port=8546
      - --ws.origins=*
      - --unlock=${MINER_ACCOUNT1_CLEAN}
      - --password=/root/.ethereum/password.txt
      - --allow-insecure-unlock
      - --nodiscover
      - --netrestrict=172.16.0.0/12
      - --verbosity=4

  # Nodo 2 - Nodo secundario
  ethereum-node2:
    image: ethereum/client-go:latest
    container_name: geth-node2
    ports:
      - "${NODE2_HTTP_PORT}:8545"
      - "${NODE2_WS_PORT}:8546"
      - "${NODE2_P2P_PORT}:30303"
    volumes:
      - ./node2:/root/.ethereum
      - ./genesis.json:/root/genesis.json
    environment:
      - NETWORK_NAME=${NETWORK_NAME}
      - CHAIN_NAME=${CHAIN_NAME}
      - NODE_PASS=${NODE_PASS}
    command:
      - --datadir=/root/.ethereum
      - --networkid=${NETWORK_ID}
      - --http
      - --http.addr=0.0.0.0
      - --http.port=8545
      - --http.corsdomain=*
      - --http.api=eth,net,web3,personal,miner,admin,debug,txpool
      - --ws
      - --ws.addr=0.0.0.0
      - --ws.port=8546
      - --ws.origins=*
      - --unlock=${MINER_ACCOUNT2_CLEAN}
      - --password=/root/.ethereum/password.txt
      - --allow-insecure-unlock
      - --nodiscover
      - --netrestrict=172.16.0.0/12
      - --verbosity=4
      - --bootnodes=enode://${MINER_ACCOUNT1_CLEAN}@ethereum-node1:30303

  # Base de datos para BlockScout
  postgres:
    image: postgres:14
    container_name: 'postgres'
    restart: always
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # Explorador de bloques BlockScout
  blockscout:
    image: blockscout/blockscout:latest
    container_name: 'blockscout'
    restart: always
    depends_on:
      - postgres
      - ethereum-node1
    environment:
      ETHEREUM_JSONRPC_VARIANT: 'geth'
      ETHEREUM_JSONRPC_HTTP_URL: 'http://ethereum-node1:8545'
      ETHEREUM_JSONRPC_WS_URL: 'ws://ethereum-node1:8546'
      ETHEREUM_JSONRPC_TRACE_URL: 'http://ethereum-node1:8545'
      DATABASE_URL: 'postgresql://postgres:postgres@postgres:5432/blockscout?ssl=false'
      ECTO_USE_SSL: 'false'
      SECRET_KEY_BASE: '56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN'
      CHAIN_ID: '${NETWORK_ID}'
      HEART_COMMAND: 'mix'
      SUBNETWORK: '${CHAIN_NAME}'
      COIN: 'ETH'
      NETWORK: '${NETWORK_NAME}'
    ports:
      - "4000:4000"

# Volúmenes persistentes
volumes:
  postgres-data:

# Red para comunicación entre nodos
networks:
  default:
    name: ethereum-network
    ipam:
      config:
        - subnet: 172.16.238.0/24